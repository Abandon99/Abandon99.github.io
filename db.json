{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/redefine/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/OPTIMA.woff","path":"fonts/OPTIMA.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/OPTIMA_B.woff","path":"fonts/OPTIMA_B.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Optima Medium.woff","path":"fonts/Optima Medium.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/fonts/Optima_Italic.woff","path":"fonts/Optima_Italic.woff","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-avatar.svg","path":"images/redefine-avatar.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-logo.svg","path":"images/redefine-logo.svg","modified":0,"renderable":1},{"_id":"themes/redefine/source/images/redefine-logo.webp","path":"images/redefine-logo.webp","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.ttf","path":"webfonts/fa-duotone-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.woff2","path":"webfonts/fa-duotone-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-light-300.ttf","path":"webfonts/fa-light-300.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-light-300.woff2","path":"webfonts/fa-light-300.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-thin-100.ttf","path":"webfonts/fa-thin-100.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-thin-100.woff2","path":"webfonts/fa-thin-100.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.ttf","path":"webfonts/fa-v4compatibility.ttf","modified":0,"renderable":1},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.woff2","path":"webfonts/fa-v4compatibility.woff2","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/redefine-theme.styl","path":"css/common/redefine-theme.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/page.styl","path":"css/layout/page.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/lazyload.js","path":"js/layouts/lazyload.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/menu-shrink.js","path":"js/layouts/menu-shrink.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/odometer.min.js","path":"js/layouts/odometer.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/layouts/toc.js","path":"js/layouts/toc.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/mermaid.min.js","path":"js/libs/mermaid.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/mermaid.min.js.map","path":"js/libs/mermaid.min.js.map","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/mermaid.js","path":"js/plugins/mermaid.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/plugins/tabs.js","path":"js/plugins/tabs.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/code-block.js","path":"js/tools/code-block.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/dark-light-toggle.js","path":"js/tools/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/go-top-bottom.js","path":"js/tools/go-top-bottom.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/local-search.js","path":"js/tools/local-search.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/runtime.js","path":"js/tools/runtime.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/js/tools/toc-toggle.js","path":"js/tools/toc-toggle.js","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/code-block.styl","path":"css/common/codeblock/code-block.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"themes/redefine/source/assets/fonts.css","path":"assets/fonts.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/assets/odometer-theme-minimal.css","path":"assets/odometer-theme-minimal.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/all.min.css","path":"fontawesome/all.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/brands.min.css","path":"fontawesome/brands.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/duotone.min.css","path":"fontawesome/duotone.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/fontawesome.min.css","path":"fontawesome/fontawesome.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/light.min.css","path":"fontawesome/light.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/regular.min.css","path":"fontawesome/regular.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/solid.min.css","path":"fontawesome/solid.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/svg-with-js.min.css","path":"fontawesome/svg-with-js.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/thin.min.css","path":"fontawesome/thin.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v4-font-face.min.css","path":"fontawesome/v4-font-face.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v4-shims.min.css","path":"fontawesome/v4-shims.min.css","modified":0,"renderable":1},{"_id":"themes/redefine/source/fontawesome/v5-font-face.min.css","path":"fontawesome/v5-font-face.min.css","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1676218558978},{"_id":"themes/redefine/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1676219118400},{"_id":"themes/redefine/.gitignore","hash":"c2ae5183354c206c31290f48cd6b93fdaf179832","modified":1676219118402},{"_id":"themes/redefine/CODE_OF_CONDUCT.md","hash":"61a6276ef54989b7a1325f3ecb3183a4dfdf50cb","modified":1676219118402},{"_id":"themes/redefine/CONTRIBUTING.md","hash":"4683df57687241164bc55f1c75fce06041f7ebf4","modified":1676219118403},{"_id":"themes/redefine/.npmignore","hash":"79596a6faba67852ff4d0426602141426f48639f","modified":1676219118402},{"_id":"themes/redefine/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1676219118403},{"_id":"themes/redefine/README_zh-CN.md","hash":"06c8e49c62a874a584e7b091efe7f4335fef9d92","modified":1676279001277},{"_id":"themes/redefine/package.json","hash":"64461fbe0b74dd377d7efcdc750473051e267062","modified":1676279001281},{"_id":"themes/redefine/README_zh-TW.md","hash":"d033cb3ce7b5bb9542a67e510861471dd7630f5c","modified":1676279001278},{"_id":"themes/redefine/languages/en.yml","hash":"1416a29d783bc2ea54a4dac5bfc190266243931e","modified":1676219118405},{"_id":"themes/redefine/_config.yml","hash":"5c07e5bcd8b5aaca17c02c95aaea22fa06b173ac","modified":1676279001279},{"_id":"themes/redefine/README.md","hash":"5b0316f7e5d5572b5a552dfb5c94d323a73b27a3","modified":1676279001277},{"_id":"themes/redefine/languages/zh-TW.yml","hash":"ad104759f13cb7de62417e3e8d5cd461e83f26e5","modified":1676219118405},{"_id":"themes/redefine/layout/archive-content.ejs","hash":"64254fbe361831419333348fa7ad151629634eba","modified":1676219118410},{"_id":"themes/redefine/languages/zh-CN.yml","hash":"be356f55baa7f4e9514d4aeb37b22913e4759291","modified":1676219118405},{"_id":"themes/redefine/layout/404.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1676219118405},{"_id":"themes/redefine/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1676219118410},{"_id":"themes/redefine/layout/category-content.ejs","hash":"7c7680ee5d02e4dd5917ed5a621ecf51b61d8181","modified":1676219118410},{"_id":"themes/redefine/layout/article-content.ejs","hash":"006c21dcc0cb66a58a94bd7a56f739969e2360c1","modified":1676279001281},{"_id":"themes/redefine/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1676219118410},{"_id":"themes/redefine/layout/home-content.ejs","hash":"e9aa5fd0cce47d5d5a9962f34a5dca0800f893e3","modified":1676219118411},{"_id":"themes/redefine/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1676219118411},{"_id":"themes/redefine/layout/category-list.ejs","hash":"92cbeee5c99b29616ff3ccbee47fe75b756bfa96","modified":1676219118410},{"_id":"themes/redefine/layout/layout.ejs","hash":"0b4c05d3a957de435e8f495a9598ec3bf9fb5412","modified":1676219118411},{"_id":"themes/redefine/layout/tag-content.ejs","hash":"0ceed12ff57c981555158e47c8b398baf70ce5f8","modified":1676219118411},{"_id":"themes/redefine/layout/page.ejs","hash":"aa7ec5657fef63b038a39e4cb444027bdc65dccb","modified":1676279001281},{"_id":"themes/redefine/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1676219118411},{"_id":"themes/redefine/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1676219118411},{"_id":"themes/redefine/scripts/use-source-data.js","hash":"3ab07198fbca7015dcc4c061247681480058b0dc","modified":1676219118415},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/bug-report--english-version-.md","hash":"6b7cd67ce8911fdc0863da1b54e404514c7e85e5","modified":1676219118400},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/bug-提交--中文版本-.md","hash":"ce8a586c2edfb66efe03d6c49e642ba566d302c5","modified":1676219118401},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/功能建议--中文版本-.md","hash":"ef69a31bcdbe2f749fd4990a4a85d51c300cd2dd","modified":1676219118401},{"_id":"themes/redefine/.github/workflows/aliyun_cdn.yml","hash":"09693748d95f126abe95582152d1c364bc82b4bb","modified":1676219118401},{"_id":"themes/redefine/.github/ISSUE_TEMPLATE/feature-request--english-version-.md","hash":"243dbc4cf0678ca4f89fc2559eab3ace9fa881a7","modified":1676219118401},{"_id":"themes/redefine/.github/workflows/npm-publish.yml","hash":"2b1771ae2a71e3c148b09d507f9be47d04e6e623","modified":1676219118402},{"_id":"themes/redefine/layout/_partials/footer.ejs","hash":"095bd0f5fabddd17d6849873db8067abf330b153","modified":1676219118407},{"_id":"themes/redefine/layout/_partials/head.ejs","hash":"ec21c712b6a0880b065cc12fbcbb96ad0c9aead8","modified":1676279001280},{"_id":"themes/redefine/layout/_partials/menu.ejs","hash":"cf433e065c6d12b83f7209ccc349fb744028d83a","modified":1676219118407},{"_id":"themes/redefine/layout/_partials/page-template.ejs","hash":"199cd805443b899d3d7e73b19064107722a0bfff","modified":1676219118408},{"_id":"themes/redefine/layout/_partials/pjax.ejs","hash":"6416c0e4c7583db85d7f738b82e5aaa8f254876e","modified":1676219118408},{"_id":"themes/redefine/layout/_partials/scripts.ejs","hash":"ba76c129a19df66125aa3c6c7aab788740bb1399","modified":1676279001280},{"_id":"themes/redefine/scripts/events/404.js","hash":"169245d7b2af1ff401cf76e718c28b4e38f637c7","modified":1676279001282},{"_id":"themes/redefine/scripts/events/welcome.js","hash":"10e2d223140bc547de14f344e046ab8b0aa48bf0","modified":1676279001282},{"_id":"themes/redefine/scripts/filters/lazyload-handle.js","hash":"7a8fd4996b9720c8d4cdb3042bfe5a1008f7c5fd","modified":1676219118412},{"_id":"themes/redefine/scripts/filters/link-handle.js","hash":"a92ed888dad340809ee558020e0bb9f41e6413ee","modified":1676219118413},{"_id":"themes/redefine/scripts/helpers/autoCanonical.js","hash":"f3ea74759129c71041371a1d77c687eb6aa88d3a","modified":1676219118413},{"_id":"themes/redefine/scripts/helpers/export-config.js","hash":"e62ebc225f718a849033ded39e76b6259c300b00","modified":1676219118413},{"_id":"themes/redefine/scripts/helpers/generate_seo.js","hash":"e0059a60cc5978be6792dcf795a2ece3a509f41a","modified":1676219118413},{"_id":"themes/redefine/scripts/helpers/helper.js","hash":"8b02ae0ce5ae0f179602a9e19c9b7a0d9e17e3a4","modified":1676219118414},{"_id":"themes/redefine/scripts/modules/btn.js","hash":"3e4c1b01a1f922f712895e9ac06c030231b35cf2","modified":1676219118414},{"_id":"themes/redefine/scripts/modules/btns.js","hash":"a91492e772287114527a3fbc85f0c7c1c1b15eb3","modified":1676219118414},{"_id":"themes/redefine/scripts/modules/folding.js","hash":"3426502d9c6808796466a5b5837abb057ed5bceb","modified":1676219118414},{"_id":"themes/redefine/scripts/modules/note.js","hash":"7c529ffe108a04a03ae6667074f69c5e62be8c54","modified":1676219118415},{"_id":"themes/redefine/scripts/modules/note-large.js","hash":"88a53682ebb71ff2ce1d08205f5eb22b837acd44","modified":1676219118414},{"_id":"themes/redefine/scripts/modules/tabs.js","hash":"7ad85a4de6918a9b646cc083704d4fd8a387b98d","modified":1676219118415},{"_id":"themes/redefine/source/css/brands.min.css","hash":"956a0381099e0204c870fc447b8522b2f4b063b8","modified":1676219118418},{"_id":"themes/redefine/source/css/fonts.css","hash":"9810e18dbd05380512e251dfa03e985fe7779e17","modified":1676219118423},{"_id":"themes/redefine/source/css/light.min.css","hash":"1e252b2b3e8486d3d6e4a6fa36157aaad73d9bee","modified":1676219118431},{"_id":"themes/redefine/source/css/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":1676219118432},{"_id":"themes/redefine/source/css/style.styl","hash":"b2cffcba34fd9a3f30e47e458cce6e27802e3abb","modified":1676279001285},{"_id":"themes/redefine/source/css/svg-with-js.min.css","hash":"28ba38557852bff7d4f81a589958ceead70b3b2d","modified":1676219118433},{"_id":"themes/redefine/source/css/regular.min.css","hash":"8b6a0f2a240efd3175e6aef9928b92c62ffd43d8","modified":1676219118432},{"_id":"themes/redefine/source/css/solid.min.css","hash":"9dfe544d3afe0a3dfbe61bbb3bbb6ac94995d90c","modified":1676219118432},{"_id":"themes/redefine/source/css/v5-font-face.min.css","hash":"758a98c7bacc6d72bc3f53ecad34424096729699","modified":1676219118434},{"_id":"themes/redefine/source/css/v4-shims.min.css","hash":"3f1f1977ce39f47e963194ae11a1f3dbbe4d951e","modified":1676219118434},{"_id":"themes/redefine/source/css/thin.min.css","hash":"65038cffbfb1e0f087d44abf9758ad16a08caf82","modified":1676219118433},{"_id":"themes/redefine/source/css/v4-font-face.min.css","hash":"57df6abf04b71d0946fa20e66e946d3a2fa66667","modified":1676219118433},{"_id":"themes/redefine/source/fonts/OPTIMA.woff","hash":"ddefd7389a3aaf00d50e2ecc99f71eefe853c4b3","modified":1676219118434},{"_id":"themes/redefine/source/fonts/Optima_Italic.woff","hash":"7200bef189fb05f741555e734908df59d0f20e2f","modified":1676219118436},{"_id":"themes/redefine/source/images/loading.svg","hash":"364550d66fb15b740c038da4780ff4c78c500c70","modified":1676219118436},{"_id":"themes/redefine/source/fonts/OPTIMA_B.woff","hash":"129a1b30e7b829b9894245b3c99e1c6c016e4147","modified":1676219118435},{"_id":"themes/redefine/source/images/redefine-avatar.svg","hash":"2f9054f6889cb6fe648f65a04370b1bf5a08ab98","modified":1676219118436},{"_id":"themes/redefine/source/images/redefine-logo.svg","hash":"015e3b4e7d1cefd31db0f4a07651aa09626ff522","modified":1676219118437},{"_id":"themes/redefine/source/images/redefine-logo.webp","hash":"1d37c4ea27006b51d5e48c028329de57475f53bd","modified":1676219118437},{"_id":"themes/redefine/source/fonts/Optima Medium.woff","hash":"f18b71ba83f68f1478b0af64cf76a99971c4fd9a","modified":1676219118435},{"_id":"themes/redefine/source/js/main.js","hash":"1feb45991ffce095b0b31a7ab0156cd9cdb8cfd7","modified":1676219118465},{"_id":"themes/redefine/source/js/utils.js","hash":"ddd1fe3304a386a8b66e2d37d8f70210d09ca07d","modified":1676219118472},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.ttf","hash":"24f298867c8f7d42240dba3a17da1a0224bd6a94","modified":1676219118546},{"_id":"themes/redefine/layout/_partials/comments/comment.ejs","hash":"6649b4ded39725bcf30ac785e6f957580c274b4f","modified":1676219118406},{"_id":"themes/redefine/layout/_partials/comments/gitalk.ejs","hash":"28a0c8b1da66a9b6863e5444aa0b50c8f6b862f0","modified":1676219118406},{"_id":"themes/redefine/layout/_partials/comments/waline.ejs","hash":"230a5f656b128f74be8792ad295a7ab255d496e6","modified":1676219118406},{"_id":"themes/redefine/source/webfonts/fa-v4compatibility.woff2","hash":"1d51fca676afe5d0cbaa854d650a99d23e2f8219","modified":1676219118546},{"_id":"themes/redefine/layout/_partials/comments/twikoo.ejs","hash":"f454a7ef2b42865cdfafb9a9d66e3635a8e4175f","modified":1676219118406},{"_id":"themes/redefine/layout/_partials/components/archive-list.ejs","hash":"7c33e49286d54824cd8f3483e30de5579951edc6","modified":1676219118406},{"_id":"themes/redefine/layout/_partials/components/home-article-meta-info.ejs","hash":"8c62d39a90540372a1473f411e9bd021b32ac9d2","modified":1676219118407},{"_id":"themes/redefine/layout/_partials/components/first-screen.ejs","hash":"d613cd05dfc34760f60101bac45c592bf8bf7d3c","modified":1676279001280},{"_id":"themes/redefine/layout/_partials/components/friends-link.ejs","hash":"606b1b223a4429eb28e5295a18ad70007ef459bc","modified":1676219118406},{"_id":"themes/redefine/layout/_partials/posts/article-meta-info.ejs","hash":"51d17aa821306d8f47908e8a5a659e712c5c5d6d","modified":1676219118408},{"_id":"themes/redefine/layout/_partials/tools/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1676219118409},{"_id":"themes/redefine/layout/_partials/posts/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1676219118408},{"_id":"themes/redefine/layout/_partials/posts/toc.ejs","hash":"b3ab8e1f6c08090f6b59fa6ffc802f6427ea3c37","modified":1676219118408},{"_id":"themes/redefine/layout/_partials/tools/post-tools.ejs","hash":"6418d8d9b1d9f9dc5361fabe280507c8a50d9513","modified":1676219118409},{"_id":"themes/redefine/layout/_partials/tools/progress-bar.ejs","hash":"d893fb2761220282efa6461c0d4107de3e2bcfdb","modified":1676219118409},{"_id":"themes/redefine/layout/_partials/tools/local-search.ejs","hash":"72c9acca0280f0e63e6a5d31618dd2707bdbec3f","modified":1676219118409},{"_id":"themes/redefine/layout/_partials/tools/side-tools.ejs","hash":"9f8fdf30f308bd20488aa76f134c516972b190cc","modified":1676219118409},{"_id":"themes/redefine/layout/_partials/tools/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1676219118409},{"_id":"themes/redefine/layout/_partials/tools/tagcloud.ejs","hash":"cd29a21b9747f39ff1761c3dbbf22523953e19d2","modified":1676219118409},{"_id":"themes/redefine/source/css/common/animated.styl","hash":"b45d84487321afa6a294e6fb1c179eb65901b0d3","modified":1676219118418},{"_id":"themes/redefine/source/css/common/basic.styl","hash":"c280c08a20709612375081b5502b7eb0f8288632","modified":1676219118419},{"_id":"themes/redefine/source/css/common/redefine-theme.styl","hash":"717cda6295b0890321166447074b71b4ca8f3def","modified":1676219118420},{"_id":"themes/redefine/source/css/layout/archive-content.styl","hash":"f8df2e4c4829bf081fa49acc0832fec0d07bdeb9","modified":1676219118430},{"_id":"themes/redefine/source/css/common/markdown.styl","hash":"6e1ef812495960c863fd9c405de46d1b71f2c667","modified":1676219118420},{"_id":"themes/redefine/source/css/common/variables.styl","hash":"bfa1ff5effe22490c8132a580c4ec6e3496c28e0","modified":1676219118420},{"_id":"themes/redefine/source/css/layout/article-content.styl","hash":"500bb14f680565b681471b37630161f7726657d3","modified":1676279001284},{"_id":"themes/redefine/source/css/layout/page.styl","hash":"f9c85163c520a01123da63907025b567eadf87b1","modified":1676219118431},{"_id":"themes/redefine/source/css/layout/home-content.styl","hash":"e2303d014353645e0d54f171db06d1ffbd8a23f0","modified":1676219118431},{"_id":"themes/redefine/source/css/layout/category-content.styl","hash":"f95793e4442642952dd60de31595e712e3e2bb69","modified":1676219118430},{"_id":"themes/redefine/source/js/layouts/lazyload.js","hash":"298c51d15c0286acbebe420369daf87edf8aada7","modified":1676219118437},{"_id":"themes/redefine/source/js/layouts/menu-shrink.js","hash":"de907057c0d162664e92880aaf457002c51dd5b6","modified":1676219118437},{"_id":"themes/redefine/source/css/layout/category-list.styl","hash":"d1c5374fbb093d7e800f6f2a71f2cd00955e4802","modified":1676219118430},{"_id":"themes/redefine/source/js/layouts/toc.js","hash":"d832e2fa48626d0c79ceee83a070639a9edd5347","modified":1676219118438},{"_id":"themes/redefine/source/js/layouts/odometer.min.js","hash":"fe5beb60997c84ab2f91b54535c4221443cdd21f","modified":1676219118438},{"_id":"themes/redefine/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1676219118438},{"_id":"themes/redefine/source/css/layout/tag-content.styl","hash":"e328d4ace5b5bd52e57bb0683e2d6935f128434d","modified":1676219118431},{"_id":"themes/redefine/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1676219118464},{"_id":"themes/redefine/source/js/plugins/mermaid.js","hash":"84b8147c7ff1f949f0b7215060376751590111d6","modified":1676219118465},{"_id":"themes/redefine/source/js/tools/dark-light-toggle.js","hash":"1c12e83fd94d51b4476c8f480165312424d62f4a","modified":1676219118465},{"_id":"themes/redefine/source/js/tools/go-top-bottom.js","hash":"f5f6f6ba96e288a5fd1427b7f3761139623e8fcd","modified":1676219118466},{"_id":"themes/redefine/source/js/plugins/tabs.js","hash":"01d151fc85f6c5744132112eb81f072cbb688d44","modified":1676219118465},{"_id":"themes/redefine/source/js/tools/code-block.js","hash":"3306e9abde9d64d496524ba000c6bd0d1d7fc4b3","modified":1676219118465},{"_id":"themes/redefine/source/js/tools/runtime.js","hash":"cfc1a9b582b281e9dd1688a55cfbc5e89d3bd968","modified":1676219118472},{"_id":"themes/redefine/source/css/common/codeblock/code-block.styl","hash":"ff6bb7e1b6084b0a658fbc76a5db3d4baf47abe8","modified":1676279001283},{"_id":"themes/redefine/source/js/tools/local-search.js","hash":"bc9e888ee05c4fb0e8fd1962423a04f63c1e393e","modified":1676219118471},{"_id":"themes/redefine/source/css/common/codeblock/code-theme.styl","hash":"65e9a6ba5f8f9371bcd6db62d8ba7355595905d2","modified":1676219118419},{"_id":"themes/redefine/source/css/common/codeblock/highlight.styl","hash":"04450276cfe5063ddf5ab43d6d78bcddf5519f25","modified":1676279001283},{"_id":"themes/redefine/source/js/tools/toc-toggle.js","hash":"eeab6a799bf23a2d4c58921dcf8b15203e1d3bfd","modified":1676219118472},{"_id":"themes/redefine/source/css/layout/_modules/buttons.styl","hash":"fb6cd0b84107f81d5c6cd0098c8e3a0d58e81c31","modified":1676219118424},{"_id":"themes/redefine/source/css/layout/_modules/folding.styl","hash":"c82c4f3d65af27150c2fa51426c265945d9fceca","modified":1676219118424},{"_id":"themes/redefine/source/css/layout/_partials/archive-list.styl","hash":"e8f912d1cf967c5d7b74edfebb26fc838bb969b9","modified":1676219118425},{"_id":"themes/redefine/source/css/layout/_partials/article-copyright-info.styl","hash":"305e4f05f672354f26b3f22013d0c44d84bd3e2b","modified":1676219118425},{"_id":"themes/redefine/source/css/layout/_modules/tabs.styl","hash":"703c4c1794a6c646613075c5d306d818b30f4df5","modified":1676219118424},{"_id":"themes/redefine/source/css/layout/_modules/notes.styl","hash":"2a05e7254943073af6556e1a44bef392e3a368fd","modified":1676219118424},{"_id":"themes/redefine/source/css/layout/_partials/first-screen.styl","hash":"9032095a804099e859c9eb95e104f1d199f8c59c","modified":1676219118427},{"_id":"themes/redefine/source/css/layout/_partials/image-viewer.styl","hash":"fe4e168a1968b3f9b33d0292944590e76809e437","modified":1676219118427},{"_id":"themes/redefine/source/css/layout/_partials/article-meta-info.styl","hash":"b447bdf70ae1d272af7c54f29bc2c9de3f2e98c7","modified":1676219118425},{"_id":"themes/redefine/source/css/layout/_partials/local-search.styl","hash":"64ae07a8792ac6bb12cc8c24e776306fee68b1c2","modified":1676219118428},{"_id":"themes/redefine/source/css/layout/_partials/footer.styl","hash":"29adc66afe145451cf396954689b73d1372cdcc6","modified":1676219118427},{"_id":"themes/redefine/source/css/layout/_partials/page-template.styl","hash":"9015d65eafee96ce2083b1d0be14245f7762a3c3","modified":1676219118428},{"_id":"themes/redefine/source/css/layout/_partials/menu.styl","hash":"d7002d8486fde897aa1547ebd5d29b7f155fb3bc","modified":1676279001284},{"_id":"themes/redefine/source/css/layout/_partials/paginator.styl","hash":"70e2af5941d443cbd465a628c96d4d3e7a1e2de1","modified":1676219118429},{"_id":"themes/redefine/source/css/layout/_partials/post-tools.styl","hash":"b7a2ff5fe4ec790e79bdb24554e5cd8151d5015f","modified":1676219118429},{"_id":"themes/redefine/source/css/layout/_partials/progress-bar.styl","hash":"efa81a0f934b6afc8fb0da62d5fc3a10804851a6","modified":1676219118429},{"_id":"themes/redefine/source/css/layout/_partials/tagcloud.styl","hash":"5a9eaa55b849336b374ea380a1ddb125ddf0258f","modified":1676219118429},{"_id":"themes/redefine/source/css/layout/_partials/side-tools.styl","hash":"73b9f44df9b8fa93f41464de21946c1ba71f0a1b","modified":1676219118429},{"_id":"themes/redefine/source/css/layout/_partials/toc.styl","hash":"9bfd46388c3a1fd0d31119e2190246ad1b04a4e0","modified":1676279001284},{"_id":"themes/redefine/source/css/layout/_partials/comments/comment.styl","hash":"4213d9fa7e1d1ff43e7b4db15d73206f7adff1a0","modified":1676219118426},{"_id":"themes/redefine/source/css/layout/_partials/comments/gitalk.styl","hash":"d247824a18463b48af23f3b476d7d90ad7047858","modified":1676219118426},{"_id":"themes/redefine/source/css/layout/_partials/comments/twikoo.styl","hash":"e926c0121d94775c3cd9e9667c670d50b0fcb938","modified":1676219118426},{"_id":"themes/redefine/source/css/layout/_partials/comments/waline.styl","hash":"91e4d045e0e829f3345a454a72ee51f5624451e7","modified":1676219118427},{"_id":"themes/redefine/source/webfonts/fa-brands-400.woff2","hash":"132096157a1bd06ee90d0e099b30858e55f44a2f","modified":1676219118484},{"_id":"themes/redefine/source/css/fontawesome.min.css","hash":"4caeaf71d849d565eb73d6cfa2a885b8fd5a1585","modified":1676219118423},{"_id":"themes/redefine/source/webfonts/fa-brands-400.ttf","hash":"3539eea45ea45122110ca826e4cf461a9fc24bfd","modified":1676219118474},{"_id":"themes/redefine/source/css/duotone.min.css","hash":"2a4c024238017920b3fd07ec8ace147fa813131d","modified":1676219118422},{"_id":"themes/redefine/source/webfonts/fa-regular-400.woff2","hash":"63bee62a49b1e129dd410a7804c36f600e45e9ef","modified":1676219118520},{"_id":"themes/redefine/source/webfonts/fa-solid-900.woff2","hash":"e62b834496e8808e09d69b157dd8d30767ab281d","modified":1676219118528},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.woff2","hash":"582f653eaef29d0cd2e05e104f2cb5776cb8ff43","modified":1676219118496},{"_id":"themes/redefine/source/webfonts/fa-light-300.woff2","hash":"43e3f3b70a4a803054641c8d946b46978dfcbc23","modified":1676219118509},{"_id":"themes/redefine/source/css/all.min.css","hash":"1aca70954817e603412964fdbfb231f03137af7c","modified":1676219118418},{"_id":"themes/redefine/source/webfonts/fa-thin-100.woff2","hash":"90725403a3ee84c1703acbdc0e913147345e46fb","modified":1676219118546},{"_id":"themes/redefine/source/webfonts/fa-solid-900.ttf","hash":"26722d8063ee4161197b007488dbfb0bd45d543d","modified":1676219118527},{"_id":"themes/redefine/source/js/libs/mermaid.min.js","hash":"c11ca6043d8dae028448a808105f8c888faac8f5","modified":1676219118444},{"_id":"themes/redefine/source/webfonts/fa-regular-400.ttf","hash":"44a016037ea5a3573ab827be35355262850678b4","modified":1676219118518},{"_id":"themes/redefine/source/webfonts/fa-light-300.ttf","hash":"fe73f4c9149947d93fde22f82e13c4186b341b43","modified":1676219118508},{"_id":"themes/redefine/source/webfonts/fa-duotone-900.ttf","hash":"6403f57a485e73326e731359cc246a7ecacf96db","modified":1676219118494},{"_id":"themes/redefine/source/webfonts/fa-thin-100.ttf","hash":"e237771f52ad4d3a041c6b9f51ca66b0811655c9","modified":1676219118544},{"_id":"themes/redefine/source/js/libs/mermaid.min.js.map","hash":"7d303cf926754817c4360f92e6c39b8c390cdbdb","modified":1676219118463},{"_id":"source/about/me.md","hash":"ebf905b5d0910c97c9ac65c7d5f7834d4c675b5a","modified":1676242105822},{"_id":"source/about/index.md","hash":"68e01260843b3b01e2bf5e9755b938e530a22c0c","modified":1676242731935},{"_id":"source/tags/index.md","hash":"cd6fbef318e73bbb5f3c90b8f35c6dcc14515af6","modified":1676278899075},{"_id":"themes/redefine/source/assets/fonts.css","hash":"9810e18dbd05380512e251dfa03e985fe7779e17","modified":1676279001282},{"_id":"themes/redefine/source/assets/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":1676279001283},{"_id":"themes/redefine/source/fontawesome/brands.min.css","hash":"956a0381099e0204c870fc447b8522b2f4b063b8","modified":1676279001290},{"_id":"themes/redefine/source/fontawesome/light.min.css","hash":"1e252b2b3e8486d3d6e4a6fa36157aaad73d9bee","modified":1676279001292},{"_id":"themes/redefine/source/fontawesome/regular.min.css","hash":"8b6a0f2a240efd3175e6aef9928b92c62ffd43d8","modified":1676279001292},{"_id":"themes/redefine/source/fontawesome/solid.min.css","hash":"9dfe544d3afe0a3dfbe61bbb3bbb6ac94995d90c","modified":1676279001292},{"_id":"themes/redefine/source/fontawesome/svg-with-js.min.css","hash":"28ba38557852bff7d4f81a589958ceead70b3b2d","modified":1676279001292},{"_id":"themes/redefine/source/fontawesome/thin.min.css","hash":"65038cffbfb1e0f087d44abf9758ad16a08caf82","modified":1676279001293},{"_id":"themes/redefine/source/fontawesome/v4-font-face.min.css","hash":"57df6abf04b71d0946fa20e66e946d3a2fa66667","modified":1676279001293},{"_id":"themes/redefine/source/fontawesome/v4-shims.min.css","hash":"3f1f1977ce39f47e963194ae11a1f3dbbe4d951e","modified":1676279001293},{"_id":"themes/redefine/source/fontawesome/v5-font-face.min.css","hash":"758a98c7bacc6d72bc3f53ecad34424096729699","modified":1676279001293},{"_id":"themes/redefine/source/fontawesome/fontawesome.min.css","hash":"4caeaf71d849d565eb73d6cfa2a885b8fd5a1585","modified":1676279001292},{"_id":"themes/redefine/source/fontawesome/duotone.min.css","hash":"2a4c024238017920b3fd07ec8ace147fa813131d","modified":1676279001292},{"_id":"themes/redefine/source/fontawesome/all.min.css","hash":"1aca70954817e603412964fdbfb231f03137af7c","modified":1676279001290},{"_id":"source/_posts/xidaduo.md","hash":"5d29eefbea780f0e5bcd45e3fe7e5481ab2500c7","modified":1676299882207},{"_id":"themes/redefine/scripts/helpers/articleRecommend.js","hash":"946472e11b68be97a82d56509a2ac90f5beb1352","modified":1676279001282},{"_id":"themes/redefine/layout/_partials/components/404-template.ejs","hash":"7729caa836a1c2208860cada53d674e9e9ff61f3","modified":1676279001279},{"_id":"themes/redefine/source/css/layout/_partials/404.styl","hash":"2195e6e3fb7cfb3d63f053bc4d3d40e64a442053","modified":1676279001283},{"_id":"source/_posts/closer.md","hash":"c5ba714aaf993df3997add69c7dfd47d31ff2839","modified":1676301016090},{"_id":"source/_posts/binary.md","hash":"e6da45d8c784717af842898fe032c79bf20a2196","modified":1676300998657},{"_id":"source/categories/index.md","hash":"6a34bae47107a00d4c76ab48f1a8d923bc8c59c0","modified":1676301231761},{"_id":"source/categories/index-1.md","hash":"2dc611d80cfa24544d3bf4e55937f21ab177aa0e","modified":1676301292067},{"_id":"public/search.xml","hash":"fa268b77e704a980332430f5a1f3c0363d85f55c","modified":1676303447342},{"_id":"public/atom.xml","hash":"15eb9a1d9e07571e38e3a5ff9eb502493ee28a3c","modified":1676303447342},{"_id":"public/404.html","hash":"44a35ff85b5ffc9cadb97beebe206c93734586be","modified":1676303447342},{"_id":"public/about/index.html","hash":"72c4146e21a823161ea1b6b745dea34567dcfa07","modified":1676303447342},{"_id":"public/tags/index.html","hash":"d21dd1d5c487b87c64af341387189b814d2359e8","modified":1676303447342},{"_id":"public/categories/index.html","hash":"ff6ec00f225ae16dc19f6e79bf4f512b131a03bb","modified":1676303447342},{"_id":"public/categories/index-1.html","hash":"df8871e758504cd1ee8c90849c3c8944939ec21e","modified":1676303447342},{"_id":"public/2023/02/13/binary/index.html","hash":"de85b8fd5768b7cc8fdca0ac51c7e46c5bb67b86","modified":1676303447342},{"_id":"public/2023/02/13/xidaduo/index.html","hash":"a9eb4f496d3cbb8a5d8e4b12589d720c2c04645d","modified":1676303447342},{"_id":"public/2017/12/28/closer/index.html","hash":"8a737dca6142f5ab69460d205fdf289a5716c306","modified":1676303447342},{"_id":"public/categories/coding/index.html","hash":"0c8cd84f89b1b98948ee9bc33ec7148e31cb3748","modified":1676303447342},{"_id":"public/categories/coding/frontEnd/index.html","hash":"c452c7ebd0009f17b10f33d9c4ba6cfd18766758","modified":1676303447342},{"_id":"public/index.html","hash":"7a237ad2a830aa9b068eba4cd51987f1dd67c058","modified":1676303447342},{"_id":"public/archives/index.html","hash":"b193894bbece877c65b881b9196f50bd9158256a","modified":1676303447342},{"_id":"public/archives/2017/index.html","hash":"e7d7aa77f8b857a443e36bba0db769f1e0597c96","modified":1676303447342},{"_id":"public/archives/2017/12/index.html","hash":"0bb8210992841d82229010d5067103a84bd5e629","modified":1676303447342},{"_id":"public/archives/2023/index.html","hash":"0cb0bf52e2c2156e5cdbbab8d3a815226617325c","modified":1676303447342},{"_id":"public/archives/2023/02/index.html","hash":"54b2a230bddeabc10c9b2136675ea135a405e63e","modified":1676303447342},{"_id":"public/tags/读书/index.html","hash":"0c3cafba7af3e211b6b30ca18962b19263cf60b7","modified":1676303447342},{"_id":"public/tags/哲学/index.html","hash":"8a1c208a4add4788be06379ef0a7a0f930930bbc","modified":1676303447342},{"_id":"public/tags/算法/index.html","hash":"a426942a288ab9557786b8ba9762b22a9d8f8afb","modified":1676303447342},{"_id":"public/tags/二分法/index.html","hash":"ff64f50854ba3d1632f64ba586f3ea7b584a6200","modified":1676303447342},{"_id":"public/tags/闭包/index.html","hash":"85c7a05c45797b95f178116672e88d25a9080359","modified":1676303447342},{"_id":"public/tags/函数/index.html","hash":"ad54d23ca77759a3056c69718f7dea0d8ced176d","modified":1676303447342},{"_id":"public/assets/fonts.css","hash":"9810e18dbd05380512e251dfa03e985fe7779e17","modified":1676303447342},{"_id":"public/assets/odometer-theme-minimal.css","hash":"793c31feb38e241a5ff6ecc5e65e61751507d728","modified":1676303447342},{"_id":"public/fontawesome/light.min.css","hash":"1e252b2b3e8486d3d6e4a6fa36157aaad73d9bee","modified":1676303447342},{"_id":"public/fontawesome/regular.min.css","hash":"8b6a0f2a240efd3175e6aef9928b92c62ffd43d8","modified":1676303447342},{"_id":"public/fontawesome/solid.min.css","hash":"9dfe544d3afe0a3dfbe61bbb3bbb6ac94995d90c","modified":1676303447342},{"_id":"public/fontawesome/thin.min.css","hash":"65038cffbfb1e0f087d44abf9758ad16a08caf82","modified":1676303447342},{"_id":"public/fontawesome/v4-font-face.min.css","hash":"57df6abf04b71d0946fa20e66e946d3a2fa66667","modified":1676303447342},{"_id":"public/fontawesome/v5-font-face.min.css","hash":"758a98c7bacc6d72bc3f53ecad34424096729699","modified":1676303447342},{"_id":"public/fontawesome/all.min.css","hash":"1aca70954817e603412964fdbfb231f03137af7c","modified":1676303447342},{"_id":"public/fontawesome/brands.min.css","hash":"956a0381099e0204c870fc447b8522b2f4b063b8","modified":1676303447342},{"_id":"public/fontawesome/duotone.min.css","hash":"2a4c024238017920b3fd07ec8ace147fa813131d","modified":1676303447342},{"_id":"public/fontawesome/fontawesome.min.css","hash":"4caeaf71d849d565eb73d6cfa2a885b8fd5a1585","modified":1676303447342},{"_id":"public/fontawesome/svg-with-js.min.css","hash":"28ba38557852bff7d4f81a589958ceead70b3b2d","modified":1676303447342},{"_id":"public/fontawesome/v4-shims.min.css","hash":"3f1f1977ce39f47e963194ae11a1f3dbbe4d951e","modified":1676303447342}],"Category":[{"name":"frontEnd","_id":"cle2xsql60006ghqz81llcc4b"},{"name":"coding","_id":"cle2yarj7000049qz2o159z1q"},{"name":"frontEnd","parent":"cle2yarj7000049qz2o159z1q","_id":"cle2ycel4000249qz69v65lvq"}],"Data":[],"Page":[{"title":"关于我","date":"2023-02-12T22:51:12.000Z","_content":"\n# 我是谁","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2023-02-13 06:51:12\n---\n\n# 我是谁","updated":"2023-02-12T22:58:51.935Z","path":"about/index.html","_id":"cle1zdc9x0000jrqz29mo05yj","comments":1,"layout":"page","content":"<h1 id=\"我是谁\"><a href=\"#我是谁\" class=\"headerlink\" title=\"我是谁\"></a>我是谁</h1>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"我是谁\"><a href=\"#我是谁\" class=\"headerlink\" title=\"我是谁\"></a>我是谁</h1>"},{"title":"tags","date":"2023-02-13T09:01:39.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-02-13 17:01:39\n---\n","updated":"2023-02-13T09:01:39.075Z","path":"tags/index.html","_id":"cle2l6cte0000ntqza0grdsvn","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2023-02-13T15:13:51.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2023-02-13 23:13:51\n---\n","updated":"2023-02-13T15:13:51.761Z","path":"categories/index.html","_id":"cle2yh0mk000549qzcjkmca4w","comments":1,"layout":"page","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2023-02-13T15:14:52.000Z","_content":"","source":"categories/index-1.md","raw":"---\ntitle: categories\ndate: 2023-02-13 23:14:52\n---\n","updated":"2023-02-13T15:14:52.067Z","path":"categories/index-1.html","comments":1,"layout":"page","_id":"cle2yiez300009dqzajfs9y88","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"我读《悉达多》","date":"2023-02-13T09:06:03.000Z","_content":"\n## 曾找过”自我“吗\n\n看过一个对自我比较有意思且精辟的描述，自我是找不到的，你去撞墙，弹回来了，你就找到了自我。\n\n悉达多的寻找自我之路，似乎有异曲同工之妙。\n","source":"_posts/xidaduo.md","raw":"---\ntitle: 我读《悉达多》\ndate: 2023-02-13 17:06:03\ntags:\n- 读书\n- 哲学\n---\n\n## 曾找过”自我“吗\n\n看过一个对自我比较有意思且精辟的描述，自我是找不到的，你去撞墙，弹回来了，你就找到了自我。\n\n悉达多的寻找自我之路，似乎有异曲同工之妙。\n","slug":"xidaduo","published":1,"updated":"2023-02-13T14:51:22.207Z","_id":"cle2lc10d0002ntqz60nk4xd5","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"曾找过”自我“吗\"><a href=\"#曾找过”自我“吗\" class=\"headerlink\" title=\"曾找过”自我“吗\"></a>曾找过”自我“吗</h2><p>看过一个对自我比较有意思且精辟的描述，自我是找不到的，你去撞墙，弹回来了，你就找到了自我。</p>\n<p>悉达多的寻找自我之路，似乎有异曲同工之妙。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"曾找过”自我“吗\"><a href=\"#曾找过”自我“吗\" class=\"headerlink\" title=\"曾找过”自我“吗\"></a>曾找过”自我“吗</h2><p>看过一个对自我比较有意思且精辟的描述，自我是找不到的，你去撞墙，弹回来了，你就找到了自我。</p>\n<p>悉达多的寻找自我之路，似乎有异曲同工之妙。</p>\n"},{"title":"终极二分法","date":"2023-02-13T14:53:02.000Z","_content":"\n\n## 二分法适用：\n- 有序数组\n- 找值\n\n先看 leetcode 35题：\n\n\n给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。\n\n请必须使用时间复杂度为 O(log n) 的算法。\n\n示例 1:\n\n```\n输入: nums = [1,3,5,6], target = 5\n输出: 2\n```\n\n我的新写法\n\n```\nvar searchInsert = function(nums, target) {\n    if(nums[0] > target) return 0\n    if(nums[nums.length - 1] < target) return nums.length\n\n    let left = -1, right = nums.length;\n\n    while(left + 1 !== right) {\n        let mid = left + ~~((right - left) / 2)\n\n        if(nums[mid] < target) {\n            left = mid\n        } else {\n            right = mid\n        }\n    }\n\n    return right\n\n}\n```\n\n\n\nleetcode 407 比较简单\n\n给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。\n\n例子1\n```\n输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n```\n\n新写法\n```\nfunction search(nums, target) {\n\n    let left = -1, right = nums.length;\n\n    while(left + 1 !== right) {\n        let mid = left + ~~((right - left) / 2)\n\n        if(nums[mid] < target) {\n            left = mid\n        } else {\n            right = mid\n        }\n    }\n\n    if(nums[left] === target) return left\n    if(nums[right] === target) return right\n    return -1\n}\n```\n\n\nleetcode 278\n\n第一个错误的版本\n\n你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。\n\n假设你有 n 个版本 [1, 2, ..., n]，你想找出导致之后所有版本出错的第一个错误的版本。\n\n你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。\n\n\n实例1\n\n```\n输入：n = 5, bad = 4\n输出：4\n解释：\n调用 isBadVersion(3) -> false \n调用 isBadVersion(5) -> true \n调用 isBadVersion(4) -> true\n所以，4 是第一个错误的版本\n```\n\n```\nvar solution = function(isBadVersion) {\n    return function(n) {\n        let left = 0, right = n + 1;\n\n        while (left + 1 !== right) {\n            const mid = left + ~~((right - left) / 2)\n            if(isBadVersion(mid)) {\n                right = mid\n            } else {\n                left = mid\n            }\n        }\n        return right\n    };\n};\n```","source":"_posts/binary.md","raw":"---\ntitle: 终极二分法\ndate: 2023-02-13 22:53:02\ntags:\n- 算法\n- 二分法\ncategories:\n- coding \n---\n\n\n## 二分法适用：\n- 有序数组\n- 找值\n\n先看 leetcode 35题：\n\n\n给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。\n\n请必须使用时间复杂度为 O(log n) 的算法。\n\n示例 1:\n\n```\n输入: nums = [1,3,5,6], target = 5\n输出: 2\n```\n\n我的新写法\n\n```\nvar searchInsert = function(nums, target) {\n    if(nums[0] > target) return 0\n    if(nums[nums.length - 1] < target) return nums.length\n\n    let left = -1, right = nums.length;\n\n    while(left + 1 !== right) {\n        let mid = left + ~~((right - left) / 2)\n\n        if(nums[mid] < target) {\n            left = mid\n        } else {\n            right = mid\n        }\n    }\n\n    return right\n\n}\n```\n\n\n\nleetcode 407 比较简单\n\n给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。\n\n例子1\n```\n输入: nums = [-1,0,3,5,9,12], target = 9\n输出: 4\n解释: 9 出现在 nums 中并且下标为 4\n```\n\n新写法\n```\nfunction search(nums, target) {\n\n    let left = -1, right = nums.length;\n\n    while(left + 1 !== right) {\n        let mid = left + ~~((right - left) / 2)\n\n        if(nums[mid] < target) {\n            left = mid\n        } else {\n            right = mid\n        }\n    }\n\n    if(nums[left] === target) return left\n    if(nums[right] === target) return right\n    return -1\n}\n```\n\n\nleetcode 278\n\n第一个错误的版本\n\n你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。\n\n假设你有 n 个版本 [1, 2, ..., n]，你想找出导致之后所有版本出错的第一个错误的版本。\n\n你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。\n\n\n实例1\n\n```\n输入：n = 5, bad = 4\n输出：4\n解释：\n调用 isBadVersion(3) -> false \n调用 isBadVersion(5) -> true \n调用 isBadVersion(4) -> true\n所以，4 是第一个错误的版本\n```\n\n```\nvar solution = function(isBadVersion) {\n    return function(n) {\n        let left = 0, right = n + 1;\n\n        while (left + 1 !== right) {\n            const mid = left + ~~((right - left) / 2)\n            if(isBadVersion(mid)) {\n                right = mid\n            } else {\n                left = mid\n            }\n        }\n        return right\n    };\n};\n```","slug":"binary","published":1,"updated":"2023-02-13T15:09:58.657Z","_id":"cle2xq9mc0000ghqz3wyt6ymq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"二分法适用：\"><a href=\"#二分法适用：\" class=\"headerlink\" title=\"二分法适用：\"></a>二分法适用：</h2><ul>\n<li>有序数组</li>\n<li>找值</li>\n</ul>\n<p>先看 leetcode 35题：</p>\n<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>\n<p>请必须使用时间复杂度为 O(log n) 的算法。</p>\n<p>示例 1:</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: nums = [1,3,5,6], target = 5</span><br><span class=\"line\">输出: 2</span><br></pre></td></tr></table></figure></div>\n\n<p>我的新写法</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var searchInsert = function(nums, target) &#123;</span><br><span class=\"line\">    if(nums[0] &gt; target) return 0</span><br><span class=\"line\">    if(nums[nums.length - 1] &lt; target) return nums.length</span><br><span class=\"line\"></span><br><span class=\"line\">    let left = -1, right = nums.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(left + 1 !== right) &#123;</span><br><span class=\"line\">        let mid = left + ~~((right - left) / 2)</span><br><span class=\"line\"></span><br><span class=\"line\">        if(nums[mid] &lt; target) &#123;</span><br><span class=\"line\">            left = mid</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            right = mid</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return right</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n\n\n<p>leetcode 407 比较简单</p>\n<p>给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。</p>\n<p>例子1</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: nums = [-1,0,3,5,9,12], target = 9</span><br><span class=\"line\">输出: 4</span><br><span class=\"line\">解释: 9 出现在 nums 中并且下标为 4</span><br></pre></td></tr></table></figure></div>\n\n<p>新写法</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function search(nums, target) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    let left = -1, right = nums.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(left + 1 !== right) &#123;</span><br><span class=\"line\">        let mid = left + ~~((right - left) / 2)</span><br><span class=\"line\"></span><br><span class=\"line\">        if(nums[mid] &lt; target) &#123;</span><br><span class=\"line\">            left = mid</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            right = mid</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if(nums[left] === target) return left</span><br><span class=\"line\">    if(nums[right] === target) return right</span><br><span class=\"line\">    return -1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></div>\n\n\n<p>leetcode 278</p>\n<p>第一个错误的版本</p>\n<p>你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。</p>\n<p>假设你有 n 个版本 [1, 2, …, n]，你想找出导致之后所有版本出错的第一个错误的版本。</p>\n<p>你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。</p>\n<p>实例1</p>\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n = 5, bad = 4</span><br><span class=\"line\">输出：4</span><br><span class=\"line\">解释：</span><br><span class=\"line\">调用 isBadVersion(3) -&gt; false </span><br><span class=\"line\">调用 isBadVersion(5) -&gt; true </span><br><span class=\"line\">调用 isBadVersion(4) -&gt; true</span><br><span class=\"line\">所以，4 是第一个错误的版本</span><br></pre></td></tr></table></figure></div>\n\n<div class=\"highlight-container\" data-rel=\"Plaintext\"><figure class=\"iseeu highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var solution = function(isBadVersion) &#123;</span><br><span class=\"line\">    return function(n) &#123;</span><br><span class=\"line\">        let left = 0, right = n + 1;</span><br><span class=\"line\"></span><br><span class=\"line\">        while (left + 1 !== right) &#123;</span><br><span class=\"line\">            const mid = left + ~~((right - left) / 2)</span><br><span class=\"line\">            if(isBadVersion(mid)) &#123;</span><br><span class=\"line\">                right = mid</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                left = mid</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return right</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure></div>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"二分法适用：\"><a href=\"#二分法适用：\" class=\"headerlink\" title=\"二分法适用：\"></a>二分法适用：</h2><ul>\n<li>有序数组</li>\n<li>找值</li>\n</ul>\n<p>先看 leetcode 35题：</p>\n<p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p>\n<p>请必须使用时间复杂度为 O(log n) 的算法。</p>\n<p>示例 1:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: nums = [1,3,5,6], target = 5</span><br><span class=\"line\">输出: 2</span><br></pre></td></tr></table></figure>\n\n<p>我的新写法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var searchInsert = function(nums, target) &#123;</span><br><span class=\"line\">    if(nums[0] &gt; target) return 0</span><br><span class=\"line\">    if(nums[nums.length - 1] &lt; target) return nums.length</span><br><span class=\"line\"></span><br><span class=\"line\">    let left = -1, right = nums.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(left + 1 !== right) &#123;</span><br><span class=\"line\">        let mid = left + ~~((right - left) / 2)</span><br><span class=\"line\"></span><br><span class=\"line\">        if(nums[mid] &lt; target) &#123;</span><br><span class=\"line\">            left = mid</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            right = mid</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return right</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>leetcode 407 比较简单</p>\n<p>给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target  ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。</p>\n<p>例子1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: nums = [-1,0,3,5,9,12], target = 9</span><br><span class=\"line\">输出: 4</span><br><span class=\"line\">解释: 9 出现在 nums 中并且下标为 4</span><br></pre></td></tr></table></figure>\n\n<p>新写法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">function search(nums, target) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    let left = -1, right = nums.length;</span><br><span class=\"line\"></span><br><span class=\"line\">    while(left + 1 !== right) &#123;</span><br><span class=\"line\">        let mid = left + ~~((right - left) / 2)</span><br><span class=\"line\"></span><br><span class=\"line\">        if(nums[mid] &lt; target) &#123;</span><br><span class=\"line\">            left = mid</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            right = mid</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    if(nums[left] === target) return left</span><br><span class=\"line\">    if(nums[right] === target) return right</span><br><span class=\"line\">    return -1</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>leetcode 278</p>\n<p>第一个错误的版本</p>\n<p>你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。</p>\n<p>假设你有 n 个版本 [1, 2, …, n]，你想找出导致之后所有版本出错的第一个错误的版本。</p>\n<p>你可以通过调用 bool isBadVersion(version) 接口来判断版本号 version 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。</p>\n<p>实例1</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：n = 5, bad = 4</span><br><span class=\"line\">输出：4</span><br><span class=\"line\">解释：</span><br><span class=\"line\">调用 isBadVersion(3) -&gt; false </span><br><span class=\"line\">调用 isBadVersion(5) -&gt; true </span><br><span class=\"line\">调用 isBadVersion(4) -&gt; true</span><br><span class=\"line\">所以，4 是第一个错误的版本</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var solution = function(isBadVersion) &#123;</span><br><span class=\"line\">    return function(n) &#123;</span><br><span class=\"line\">        let left = 0, right = n + 1;</span><br><span class=\"line\"></span><br><span class=\"line\">        while (left + 1 !== right) &#123;</span><br><span class=\"line\">            const mid = left + ~~((right - left) / 2)</span><br><span class=\"line\">            if(isBadVersion(mid)) &#123;</span><br><span class=\"line\">                right = mid</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                left = mid</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return right</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>"},{"title":"明明1句话就能理解「闭包」","date":"2017-12-27T16:00:00.000Z","_content":"\n## 讲人话:\n\n**「 一个函数 + 这个函数的外部环境   =   闭包 」**\n\n所以，这类看似不负责的说法都是正确的：\n\n> 一个函数就是一个闭包\n\n> A clouser is nothing but a function with scope.\n\n> A Closure is nothing but a function inside a function.\n\n我感觉闭包已经讲完了，但是这样你们肯定想揍我。\n\n## 讲专业:\n\n### 先瞅瞅wiki\n> In programming languages, a closure, also lexical closure or function closure, is a technique for implementing lexically scoped name binding in a language with first-class functions. Operationally, a closure is a record storing a function together with an environment. The environment is a mapping associating each free variable of the function (variables that are used locally, but defined in an enclosing scope) with the value or reference to which the name was bound when the closure was created. Unlike a plain function, a closure allows the function to access those captured variables through the closure's copies of their values or references, even when the function is invoked outside their scope.\n\n大概意思是：闭包（也称为词汇闭包或函数闭包）是一种在具有一级函数的语言中实现词汇范围名称绑定的技术。从操作上讲，闭包是一个记录，它将一个函数与一个环境一起存储。 环境是一种映射，将函数的每个自由变量（本地使用但在封闭范围内定义的变量）与创建闭包时名称绑定到的值或引用相关联。 与普通函数不同，闭包允许函数通过闭包的值或引用副本访问这些捕获的变量，即使函数在其作用域之外被调用。\n\n### 再瞅瞅MDN对JavaScript中闭包的描述\n> 一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。\n\n### 我来总结：\n\n我觉得MDN说的好。\n\n\n","source":"_posts/closer.md","raw":"---\ntitle: 明明1句话就能理解「闭包」\ndate: 2017-12-28\ncategories:\n - coding\n - frontEnd\ntags:\n - 闭包\n - 函数\n---\n\n## 讲人话:\n\n**「 一个函数 + 这个函数的外部环境   =   闭包 」**\n\n所以，这类看似不负责的说法都是正确的：\n\n> 一个函数就是一个闭包\n\n> A clouser is nothing but a function with scope.\n\n> A Closure is nothing but a function inside a function.\n\n我感觉闭包已经讲完了，但是这样你们肯定想揍我。\n\n## 讲专业:\n\n### 先瞅瞅wiki\n> In programming languages, a closure, also lexical closure or function closure, is a technique for implementing lexically scoped name binding in a language with first-class functions. Operationally, a closure is a record storing a function together with an environment. The environment is a mapping associating each free variable of the function (variables that are used locally, but defined in an enclosing scope) with the value or reference to which the name was bound when the closure was created. Unlike a plain function, a closure allows the function to access those captured variables through the closure's copies of their values or references, even when the function is invoked outside their scope.\n\n大概意思是：闭包（也称为词汇闭包或函数闭包）是一种在具有一级函数的语言中实现词汇范围名称绑定的技术。从操作上讲，闭包是一个记录，它将一个函数与一个环境一起存储。 环境是一种映射，将函数的每个自由变量（本地使用但在封闭范围内定义的变量）与创建闭包时名称绑定到的值或引用相关联。 与普通函数不同，闭包允许函数通过闭包的值或引用副本访问这些捕获的变量，即使函数在其作用域之外被调用。\n\n### 再瞅瞅MDN对JavaScript中闭包的描述\n> 一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。\n\n### 我来总结：\n\n我觉得MDN说的好。\n\n\n","slug":"closer","published":1,"updated":"2023-02-13T15:10:16.090Z","_id":"cle2xqltp0001ghqz6olp92w5","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"讲人话\"><a href=\"#讲人话\" class=\"headerlink\" title=\"讲人话:\"></a>讲人话:</h2><p><strong>「 一个函数 + 这个函数的外部环境   =   闭包 」</strong></p>\n<p>所以，这类看似不负责的说法都是正确的：</p>\n<blockquote>\n<p>一个函数就是一个闭包</p>\n</blockquote>\n<blockquote>\n<p>A clouser is nothing but a function with scope.</p>\n</blockquote>\n<blockquote>\n<p>A Closure is nothing but a function inside a function.</p>\n</blockquote>\n<p>我感觉闭包已经讲完了，但是这样你们肯定想揍我。</p>\n<h2 id=\"讲专业\"><a href=\"#讲专业\" class=\"headerlink\" title=\"讲专业:\"></a>讲专业:</h2><h3 id=\"先瞅瞅wiki\"><a href=\"#先瞅瞅wiki\" class=\"headerlink\" title=\"先瞅瞅wiki\"></a>先瞅瞅wiki</h3><blockquote>\n<p>In programming languages, a closure, also lexical closure or function closure, is a technique for implementing lexically scoped name binding in a language with first-class functions. Operationally, a closure is a record storing a function together with an environment. The environment is a mapping associating each free variable of the function (variables that are used locally, but defined in an enclosing scope) with the value or reference to which the name was bound when the closure was created. Unlike a plain function, a closure allows the function to access those captured variables through the closure’s copies of their values or references, even when the function is invoked outside their scope.</p>\n</blockquote>\n<p>大概意思是：闭包（也称为词汇闭包或函数闭包）是一种在具有一级函数的语言中实现词汇范围名称绑定的技术。从操作上讲，闭包是一个记录，它将一个函数与一个环境一起存储。 环境是一种映射，将函数的每个自由变量（本地使用但在封闭范围内定义的变量）与创建闭包时名称绑定到的值或引用相关联。 与普通函数不同，闭包允许函数通过闭包的值或引用副本访问这些捕获的变量，即使函数在其作用域之外被调用。</p>\n<h3 id=\"再瞅瞅MDN对JavaScript中闭包的描述\"><a href=\"#再瞅瞅MDN对JavaScript中闭包的描述\" class=\"headerlink\" title=\"再瞅瞅MDN对JavaScript中闭包的描述\"></a>再瞅瞅MDN对JavaScript中闭包的描述</h3><blockquote>\n<p>一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。</p>\n</blockquote>\n<h3 id=\"我来总结：\"><a href=\"#我来总结：\" class=\"headerlink\" title=\"我来总结：\"></a>我来总结：</h3><p>我觉得MDN说的好。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"讲人话\"><a href=\"#讲人话\" class=\"headerlink\" title=\"讲人话:\"></a>讲人话:</h2><p><strong>「 一个函数 + 这个函数的外部环境   =   闭包 」</strong></p>\n<p>所以，这类看似不负责的说法都是正确的：</p>\n<blockquote>\n<p>一个函数就是一个闭包</p>\n</blockquote>\n<blockquote>\n<p>A clouser is nothing but a function with scope.</p>\n</blockquote>\n<blockquote>\n<p>A Closure is nothing but a function inside a function.</p>\n</blockquote>\n<p>我感觉闭包已经讲完了，但是这样你们肯定想揍我。</p>\n<h2 id=\"讲专业\"><a href=\"#讲专业\" class=\"headerlink\" title=\"讲专业:\"></a>讲专业:</h2><h3 id=\"先瞅瞅wiki\"><a href=\"#先瞅瞅wiki\" class=\"headerlink\" title=\"先瞅瞅wiki\"></a>先瞅瞅wiki</h3><blockquote>\n<p>In programming languages, a closure, also lexical closure or function closure, is a technique for implementing lexically scoped name binding in a language with first-class functions. Operationally, a closure is a record storing a function together with an environment. The environment is a mapping associating each free variable of the function (variables that are used locally, but defined in an enclosing scope) with the value or reference to which the name was bound when the closure was created. Unlike a plain function, a closure allows the function to access those captured variables through the closure’s copies of their values or references, even when the function is invoked outside their scope.</p>\n</blockquote>\n<p>大概意思是：闭包（也称为词汇闭包或函数闭包）是一种在具有一级函数的语言中实现词汇范围名称绑定的技术。从操作上讲，闭包是一个记录，它将一个函数与一个环境一起存储。 环境是一种映射，将函数的每个自由变量（本地使用但在封闭范围内定义的变量）与创建闭包时名称绑定到的值或引用相关联。 与普通函数不同，闭包允许函数通过闭包的值或引用副本访问这些捕获的变量，即使函数在其作用域之外被调用。</p>\n<h3 id=\"再瞅瞅MDN对JavaScript中闭包的描述\"><a href=\"#再瞅瞅MDN对JavaScript中闭包的描述\" class=\"headerlink\" title=\"再瞅瞅MDN对JavaScript中闭包的描述\"></a>再瞅瞅MDN对JavaScript中闭包的描述</h3><blockquote>\n<p>一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包围），这样的组合就是闭包（closure）。也就是说，闭包让你可以在一个内层函数中访问到其外层函数的作用域。在 JavaScript 中，每当创建一个函数，闭包就会在函数创建的同时被创建出来。</p>\n</blockquote>\n<h3 id=\"我来总结：\"><a href=\"#我来总结：\" class=\"headerlink\" title=\"我来总结：\"></a>我来总结：</h3><p>我觉得MDN说的好。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cle2xq9mc0000ghqz3wyt6ymq","category_id":"cle2yarj7000049qz2o159z1q","_id":"cle2yarj8000149qz7m12b3r7"},{"post_id":"cle2xqltp0001ghqz6olp92w5","category_id":"cle2yarj7000049qz2o159z1q","_id":"cle2ycel4000349qzdd4z5kjo"},{"post_id":"cle2xqltp0001ghqz6olp92w5","category_id":"cle2ycel4000249qz69v65lvq","_id":"cle2ycel5000449qzagtpcdq6"}],"PostTag":[{"post_id":"cle2lc10d0002ntqz60nk4xd5","tag_id":"cle2leftc0003ntqzc46603gg","_id":"cle2lefte0004ntqzbz24dhe6"},{"post_id":"cle2lc10d0002ntqz60nk4xd5","tag_id":"cle2limdj0005ntqzdwxsge7a","_id":"cle2limdk0006ntqzff4w39tt"},{"post_id":"cle2xq9mc0000ghqz3wyt6ymq","tag_id":"cle2xry330002ghqz6s4n2i5b","_id":"cle2xry350004ghqz2w5ehdkc"},{"post_id":"cle2xq9mc0000ghqz3wyt6ymq","tag_id":"cle2xry340003ghqz4pvigz6t","_id":"cle2xry360005ghqz13ft4y24"},{"post_id":"cle2xqltp0001ghqz6olp92w5","tag_id":"cle2xsql60007ghqzh3r3g68s","_id":"cle2xsql8000aghqz25f7f5cn"},{"post_id":"cle2xqltp0001ghqz6olp92w5","tag_id":"cle2xsql70008ghqz83vadidm","_id":"cle2xsql8000bghqz0lg83g4y"}],"Tag":[{"name":"读书","_id":"cle2leftc0003ntqzc46603gg"},{"name":"哲学","_id":"cle2limdj0005ntqzdwxsge7a"},{"name":"算法","_id":"cle2xry330002ghqz6s4n2i5b"},{"name":"二分法","_id":"cle2xry340003ghqz4pvigz6t"},{"name":"闭包","_id":"cle2xsql60007ghqzh3r3g68s"},{"name":"函数","_id":"cle2xsql70008ghqz83vadidm"}]}}